/*
오늘도 서준이는 점근적 표기 수업 조교를 하고 있다. 아빠가 수업한 내용을 학생들이 잘 이해했는지 문제를 통해서 확인해보자.

알고리즘의 소요 시간을 나타내는 O-표기법(빅-오)을 다음과 같이 정의하자.

O(g(n)) = {f(n) | 모든 n ≥ n0에 대하여 f(n) ≤ c × g(n)인 양의 상수 c와 n0가 존재한다}

이 정의는 실제 O-표기법(https://en.wikipedia.org/wiki/Big_O_notation)과 다를 수 있다.

함수 f(n) = a1n + a0, 양의 정수 c, n0가 주어질 경우 O(n) 정의를 만족하는지 알아보자.
}

*/

#include <stdio.h>
#include <iostream>
#include <string>



int main(){

    long long a1, a0, c, n0;
    std::cin >> a1 >> a0 >> c >> n0;
    std::cout << ((a1 <= c && a1 * n0 + a0 <= c * n0) ? 1 : 0) << '\n';
    return 0;
}

/*

시간복잡도는 결국 충청도 시장바닥과도 같다
요매만큼 주이소
요만큼?

대충 이런느낌
가장 차수가 높은 n을 잡고 금마에다가 상수 k(버렸다고 생각한놈들)을 곱하면 그 나머지 부분들은 대부분 처리가 된다는거다
즉 빅-오는 이 알고리즘이 얼마나 빨리 커지는지, 성장속도(차수)가 뭔지를 보는 개념
결국 가장 큰 수를 남기고 너머지는 주거주거 느낌

*/

